<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- namespace 用来定位具体是哪一个mapper文件的东西,不能与其他mapper的namespace重复 -->
<mapper namespace="com.zhiyou.dao.UserDao">
<cache type="com.zhiyou.redis.RedisCache"/>

	<insert id="add" parameterType="user">
		insert into user
		values(null,#{department_id},#{role_id},#{username},#{is_male},
		#{mobile},#{age},#{address},null,null,
		#{password},#{tel},#{id_num},#{email},#{hobby},
		#{education},#{card_num},#{nation},#{marry},null,
		null,null,null,null,null);

	</insert>
	
	<insert id="addRegister" parameterType="user">
	INSERT INTO user VALUES (null, #{email}, null, md5(#{password}), null, null, null, null, null, null, now());
	</insert>

 <update id="update" parameterType="user">

		update user
		<trim prefix="set" suffixOverrides=",">
			
			<if test="marry!=null">
				marry=#{marry}
			</if>

		</trim>
		<where>
			<if test="user_id!=null">
				user_id=#{user_id}
			</if>
		</where>
	</update> 
	
	 <update id="updateZ" parameterType="user">
	update user 
	<trim prefix="set" suffixOverrides=",">
	      <if test="nickname!=null">
				nickname=#{nickname},
			</if>
			<if test="sex!=null">
				sex=#{sex},
			</if>
			<if test="birthday!=null">
				birthday=#{birthday},
			</if>
			<if test="address!=null">
				address=#{address}
			</if>
			
	</trim>
	   <where>
				id=#{id}
		</where>
	</update> 
	
	  <update id="updateM" parameterType="user">
	update user  set password=#{p} where id=#{i}
	<!-- <trim prefix="set" suffixOverrides=",">
	      <if test="password!=null">
				password=#{p}
			</if>	
	</trim>
	   <where>
				id=#{i}
		</where> -->
	</update> 
	
	
	 <update id="updateT" parameterType="user">
	update user set imgUrl=#{img} where id=#{id}
	</update> 
	
	
	<delete id="delete" parameterType="user" >
		delete from user where user_id=#{sd};
	</delete>

	<select id="selectAll" resultType="user">
		select * from user
	</select>
	<select id="selectByName" resultType="user">
		select * from user where
		email=#{name} and password=#{password}
	</select>

<select id="selectById" resultType="user">
		select * from user where id=#{idddd}
	</select>
	
	
	
	<select id="selectName" resultType="user">
	select * from user where email=#{email}
	</select>
	<select id="selectByPassword" resultType="user">
	select * from user  where password=md5(#{ed})
	</select>
	
	 <!-- <select id="selectLikeAll" resultType="user">
		select * from user 
		<trim prefix="where" prefixOverrides="and|or">
			
			<if test="username!=null">
				<bind name="namee" value="'%'+username+'%'"/>
				or	username like #{namee}
			</if>
			
			
		</trim>
	</select>  -->
	
	   <select id="selectLikeAll" resultType="user">
		
		
		<bind name="namee" value="'%'+like+'%'"/>
		select * from user where email like #{namee}
				
	</select>
  

</mapper>